AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ProjectName:
    Type: String

  RDSMasterUsername:
    Type: String

  DBName:
    Type: String
    Default: node_demo_database

Resources:
  # Randomly generate DB Credentials in Secrets Manager
  DBCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "/${ProjectName}/DB_CREDENTIALS"
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '"@/\\$()[]=;|&`'
        SecretStringTemplate: !Sub |
          {
            "username": "${RDSMasterUsername}"
          }
        GenerateStringKey: "password"

  # RDS Instance for PostgreSQL
  RDSInstance:
    Type: AWS::RDS::DBInstance
    DependsOn: DBCredentials
    Properties:
      DBInstanceIdentifier: "demo-db-instance"
      DBInstanceClass: db.t3.micro
      Engine: postgres
      DBName: !Ref DBName
      MasterUsername: !Sub "{{resolve:secretsmanager:/${ProjectName}/DB_CREDENTIALS:SecretString:username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:/${ProjectName}/DB_CREDENTIALS:SecretString:password}}"
      AllocatedStorage: 20
      VPCSecurityGroups:
        - !ImportValue RDSSecurityGroupId
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: false
      StorageType: gp3
      PubliclyAccessible: false

  # DB Subnet Group to specify the private subnets for RDS
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "RDS Subnet Group"
      SubnetIds:
        - !ImportValue PrivateSubnetAId
        - !ImportValue PrivateSubnetBId

Outputs:
  DBName:
    Value: !Ref DBName
    Export:
      Name: DBName

  DBEndpoint:
    Description: "The endpoint of the RDS instance"
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: DBEndpoint
